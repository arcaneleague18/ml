from sklearn.preprocessing import LabelEncoder
import pandas as pd
import numpy as np

# Example dataset
data = pd.DataFrame([
    ['Sunny', 'Warm', 'Normal', 'Strong', 'Warm', 'Same', 'Yes'],
    ['Sunny', 'Warm', 'High', 'Strong', 'Warm', 'Same', 'Yes'],
    ['Rainy', 'Cold', 'High', 'Strong', 'Warm', 'Change', 'No'],
    ['Sunny', 'Warm', 'High', 'Strong', 'Cool', 'Change', 'Yes']
], columns=['Sky', 'AirTemp', 'Humidity', 'Wind', 'Water', 'Forecast', 'EnjoySport']) #replace this with the given data

# Encode categorical data if needed
le = LabelEncoder()
for col in data.columns:
    data[col] = le.fit_transform(data[col])

# Separate attributes and target
X = np.array(data.iloc[:, :-1])
y = np.array(data.iloc[:, -1])

# Implement Find-S
def find_s(X, y):
    hypothesis = None
    for i in range(len(y)):
        if y[i] == 1:  # 1 represents 'Yes'
            hypothesis = X[i].copy()
            break

    for i in range(len(y)):
        if y[i] == 1:
            for j in range(len(hypothesis)):
                if X[i][j] != hypothesis[j]:
                    hypothesis[j] = -1  # -1 means '?'
    return hypothesis

print("Most specific hypothesis:", find_s(X, y))
